/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

import { Binary, PermitSignature, Uint128 } from "../../../shared/contract/types";

export type QueryMsg =
  | Get_config_msg
  | Get_reward_tokens_msg
  | With_permit_msg
  ;
// Individual Queries
export interface Get_config_msg {
  get_config: {
    [k: string]: unknown;
  };
}
export interface Get_reward_tokens_msg {
  get_reward_tokens: {
    [k: string]: unknown;
  };
}
export interface With_permit_msg {
  with_permit: {
    permit: PermitFor_PermitData;
    query: AuthQuery;
    [k: string]: unknown;
  };
}




// Base Types 
export type AuthQuery =
  | {
    get_staker_lp_token_info: {
      [k: string]: unknown;
    };
  }
  | {
    get_claim_reward: {
      time: Uint128;
      [k: string]: unknown;
    };
  };

/**
 * Where the information will be stored
 */
export interface PermitFor_PermitData {
  account_number?: Uint128 | null;
  chain_id?: string | null;
  memo?: string | null;
  params: PermitData;
  sequence?: Uint128 | null;
  signature: PermitSignature;
}
export interface PermitData {
  data: Binary;
  key: string;
}
